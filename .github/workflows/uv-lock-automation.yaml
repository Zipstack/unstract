name: UV Lock Automation

on:
  push:
    branches: [ "main" ]
    paths:
      - 'requirements.txt'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'requirements.txt'
  workflow_dispatch:

jobs:
  update-lock:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Generate lock file
        run: |
          uv pip compile requirements.txt -o requirements.lock
      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: "update-requirements-lock"
          COMMIT_MESSAGE: "Update requirements.lock"
          PR_TITLE: "Update requirements.lock"
          PR_BODY: "This PR updates the requirements.lock file based on changes to requirements.txt."
          BASE_BRANCH: ${{ github.ref_name }}
          ACTOR: ${{ github.actor }}
        run: |
          git config --global user.name "$ACTOR"
          git config --global user.email "$ACTOR@users.noreply.github.com"
          
          if git diff --quiet requirements.lock; then
            echo "No changes to requirements.lock"
            exit 0
          fi
          
          git checkout -b "$BRANCH_NAME"
          git add requirements.lock
          git commit -m "$COMMIT_MESSAGE"
          git push -f origin "$BRANCH_NAME"
          
          # Check if PR already exists
          PR_EXISTS=$(gh pr list --head "$BRANCH_NAME" --json number --jq 'length')
          
          if [ "$PR_EXISTS" -eq "0" ]; then
            gh pr create --title "$PR_TITLE" --body "$PR_BODY" --base "$BASE_BRANCH" --head "$BRANCH_NAME"
          else
            echo "PR already exists"
          fi
