name: Unstract Docker Image Build and Push (Production)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker image tag"
        required: true

  release:
    types:
      - created

run-name: "[${{ github.event.release.tag_name || github.event.inputs.tag }}] Docker Image Build and Push (Production)"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service_name: [backend, frontend, platform-service, prompt-service, runner, x2text-service]

    steps:
      - name: Checkout code for release
        if: github.event_name == 'release'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Checkout code for branch
        if: github.event_name != 'release'
        uses: actions/checkout@v4

      # Set up Docker Buildx for better caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Set version tag based on event type
      - name: Set version tag
        id: set-tag
        run: echo "DOCKER_VERSION_TAG=${{ github.event.release.tag_name || github.event.inputs.tag }}" >> $GITHUB_ENV

      # Find the Dockerfile path for the current service
      - name: Set Dockerfile path
        id: dockerfile-path
        run: |
          if [ -f "./docker/dockerfiles/${{ matrix.service_name }}.Dockerfile" ]; then
            echo "DOCKERFILE_PATH=./docker/dockerfiles/${{ matrix.service_name }}.Dockerfile" >> $GITHUB_ENV
          else
            echo "Could not find Dockerfile for ${{ matrix.service_name }}" && exit 1
          fi

      # Build and push using BuildKit cache
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          # push: true
          push: false  # TODO: Make true after testing is complete
          tags: |
            unstract/${{ matrix.service_name }}:${{ env.DOCKER_VERSION_TAG }}
            ${{ github.event_name == 'release' && format('unstract/{0}:latest', matrix.service_name) || '' }}
          build-args: |
            VERSION=${{ env.DOCKER_VERSION_TAG }}
          cache-from: type=gha,scope=${{ matrix.service_name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service_name }}
