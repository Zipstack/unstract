name: Container Image Build Test for PRs

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Container Run
        run: |
          ./run-platform.sh -b
          sleep 30
          docker compose -f docker/docker-compose.yaml ps -a
          # Get the names of exited containers
          custom_format="{{.Name}}\t{{.Image}}\t{{.Service}}"
          EXITED_CONTAINERS=$(docker compose -f docker/docker-compose.yaml ps -a --filter status=exited --format "$custom_format")

          line_count=$(echo "$EXITED_CONTAINERS" | wc -l)

          if [ "$line_count" -gt 1 ]; then
            echo "Exited Containers: $EXITED_CONTAINERS"

            SERVICE=$(echo "$EXITED_CONTAINERS" | awk 'NR>0 {print $3}')
            echo "Exited Services:"
            echo "$SERVICE"
            echo "There are exited containers."
            # Print logs of exited containers
            IFS=$'\n'
            for SERVICE in $SERVICE; do
              docker compose -f docker/docker-compose.yaml logs "$SERVICE"
            done
            docker compose -f docker/docker-compose.yaml down -v
            exit 1
          fi
          curl -vvv http://frontend.unstract.localhost

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: latest
          install-chromedriver: false

      - name: Cache tox environments
        uses: actions/cache@v4
        with:
          path: .tox/
          key: ${{ runner.os }}-tox-${{ hashFiles('**/pyproject.toml', '**/tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-tox-

      - name: Install tox
        run: pip install tox

      - name: Run tox
        id: tox
        run: |
          tox -e e2e &&
          printf '$$\\textcolor{#0051db}{\\tt{E2E\\ Tests}}$$\n\n%s' "$(cat e2e-report.md)" > e2e-report.md

      - name: Render the report to the PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: e2e-test-report
          recreate: true
          path: e2e-report.md

      - name: Output reports to the job summary when tests fail
        shell: bash
        run: |
          if [ -f "e2e-report.md" ]; then
            echo "<details><summary>E2E Test Report</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat "e2e-report.md" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi
      - name: Stop any running containers
        run: docker compose -f docker/docker-compose.yaml down -v
