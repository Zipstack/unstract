# Generated by Django 4.2.1 on 2024-04-24 14:03

import logging
from typing import Any

from django.db import migrations, models

logger = logging.getLogger(__name__)

# This migration flushes all records in IndexManager which have an incorrect index
# key generated from an older implementation
# Refer https://github.com/Zipstack/unstract-sdk/blob/1c61f4325a38e1bd25e207ca2c426971aa7b62cf/src/unstract/sdk/index.py#L322C1-L349C10  # noqa E501


class Migration(migrations.Migration):

    dependencies = [
        ("prompt_studio_index_manager", "0001_initial"),
    ]

    def remove_incorrect_index_keys(apps: Any, schema_editor: Any) -> None:
        index_manager_model = apps.get_model(
            "prompt_studio_index_manager", "IndexManager"
        )

        incorrect_index_pattern = (
            r"[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\|"  # Tool ID
            r"[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\|"  # Vector DB
            r"[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\|"  # Embedding
            r"[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\|"  # X2Text
            r"\d+\|\d+\|"  # Chunk size and chunk overlap
            r"[\da-f]{64}"  # SHA-256 file hash
        )

        incorrect_indexes = index_manager_model.objects.filter(
            models.Q(raw_index_id__regex=incorrect_index_pattern)
            | models.Q(summarize_index_id__regex=incorrect_index_pattern)
        )
        logger.info(f"Deleting index manager records: {incorrect_indexes}")
        incorrect_indexes.delete()

    operations = [
        migrations.RunPython(
            remove_incorrect_index_keys, reverse_code=migrations.RunPython.noop
        ),
    ]
