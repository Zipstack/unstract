include:
  - docker-compose-dev-essentials.yaml

services:
  # Backend service
  backend:
    image: unstract/backend:${VERSION}
    container_name: unstract-backend
    restart: unless-stopped
    command: migrate
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    depends_on:
      - db
      - redis
      - reverse-proxy
      - minio
      - platform-service
      - prompt-service
      - x2text-service
    volumes:
      - prompt_studio_data:/app/prompt-studio-data
      - ./workflow_data:/data
    environment:
      - ENVIRONMENT=development
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`frontend.unstract.localhost`) && PathPrefix(`/api/v1`, `/deployment`)
    extra_hosts:
      # "host-gateway" is a special string that translates to host docker0 i/f IP.
      - "host.docker.internal:host-gateway"

  # Celery execution consumer
  execution-consumer:
    image: unstract/backend:${VERSION}
    container_name: unstract-execution-consumer
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend worker --loglevel=info -Q celery,celery_periodic_logs,celery_log_task_queue --autoscale=8,1"
    env_file:
      - ../backend/.env
    depends_on:
      - redis
    environment:
      - ENVIRONMENT=development
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data

  # Celery Flower
  celery-flower:
    image: unstract/backend:${VERSION}
    container_name: unstract-celery-flower
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend flower --port=5555 --purge_offline_workers=5"
    env_file:
      - ../backend/.env
    depends_on:
      - execution-consumer
      - redis
    labels:
      - traefik.enable=false
    ports:
      - "5555:5555"
    environment:
      - ENVIRONMENT=development
    volumes:
      - unstract_data:/data
    profiles:
      - optional

  # Celery Beat
  celery-beat:
    image: unstract/backend:${VERSION}
    container_name: unstract-celery-beat
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend beat --scheduler django_celery_beat.schedulers:DatabaseScheduler -l INFO"
    env_file:
      - ../backend/.env
      - ./essentials.env
    depends_on:
        - db
        - redis

  # Frontend React app
  frontend:
    image: unstract/frontend:${VERSION}
    container_name: unstract-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - reverse-proxy
    environment:
      - ENVIRONMENT=development
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`frontend.unstract.localhost`)

  platform-service:
    image: unstract/platform-service:${VERSION}
    container_name: unstract-platform-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ../platform-service/.env
    depends_on:
      - redis
      - db
    labels:
      - traefik.enable=false

  prompt-service:
    image: unstract/prompt-service:${VERSION}
    container_name: unstract-prompt-service
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "3003:3003"
    env_file:
      - ../prompt-service/.env
    labels:
      - traefik.enable=false
    extra_hosts:
      # "host-gateway" is a special string that translates to host docker0 i/f IP.
      - "host.docker.internal:host-gateway"

  x2text-service:
    image: unstract/x2text-service:${VERSION}
    container_name: unstract-x2text-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    env_file:
      - ../x2text-service/.env
    depends_on:
      - db
    labels:
      - traefik.enable=false

  worker:
    image: unstract/worker:${VERSION}
    container_name: unstract-worker
    restart: unless-stopped
    ports:
      - 5002:5002
    env_file:
      - ../worker/.env
    volumes:
      - ./workflow_data:/data
      # Docker socket bind mount to spawn tool containers
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
    labels:
      - traefik.enable=false

  document-service:
    profiles:
        - optional
    image: unstract/document-service:${VERSION}
    container_name: unstract-document-service
    restart: unless-stopped
    ports:
      - 3002:3002
    depends_on:
      - redis
    env_file:
      - ../document-service/.env
    environment:
      - ENVIRONMENT=development
    labels:
      - traefik.enable=false

volumes:
  prompt_studio_data:
  unstract_data:

networks:
  default:
    # NOTE:
    # Any changes need to be reflected in proxy service too.
    name: unstract-network
