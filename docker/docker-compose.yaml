include:
  - docker-compose-dev-essentials.yaml

services:
  # Backend service
  backend:
    image: unstract/backend:${VERSION}
    container_name: unstract-backend
    restart: unless-stopped
    command: --migrate
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    depends_on:
      - db
      - redis
      - rabbitmq
      - reverse-proxy
      - minio
      - minio-bootstrap
      - platform-service
      - prompt-service
      - x2text-service
    volumes:
      - prompt_studio_data:/app/prompt-studio-data
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`frontend.unstract.localhost`) && PathPrefix(`/api/v1`, `/deployment`)
    extra_hosts:
      # "host-gateway" is a special string that translates to host docker0 i/f IP.
      - "host.docker.internal:host-gateway"

  # Celery default worker
  worker:
    image: unstract/backend:${VERSION}
    container_name: unstract-worker
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend worker --loglevel=info -Q celery,celery_api_deployments --autoscale=${WORKER_AUTOSCALE}"
    env_file:
      - ../backend/.env
    depends_on:
      - rabbitmq
      - db
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config


  # Celery worker for managing logs and periodic tasks
  worker-logging:
    image: unstract/backend:${VERSION}
    container_name: unstract-worker-logging
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend worker --loglevel=info -Q celery_periodic_logs,celery_log_task_queue --autoscale=${WORKER_LOGGING_AUTOSCALE}"
    env_file:
      - ../backend/.env
    depends_on:
      - rabbitmq
      - db
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-logging
    labels:
      - traefik.enable=false

  # Celery worker for handling file processing tasks
  worker-file-processing:
    image: unstract/backend:${VERSION}
    container_name: unstract-worker-file-processing
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend.workers.file_processing worker --loglevel=info -Q file_processing,api_file_processing --autoscale=${WORKER_FILE_PROCESSING_AUTOSCALE}"
    env_file:
      - ../backend/.env
    depends_on:
      - rabbitmq
      - db
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-file-processing
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config

  worker-file-processing-callback:
    image: unstract/backend:${VERSION}
    container_name: unstract-worker-file-processing-callback
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend.workers.file_processing_callback worker --loglevel=info -Q file_processing_callback,api_file_processing_callback --autoscale=${WORKER_FILE_PROCESSING_CALLBACK_AUTOSCALE}"
    env_file:
      - ../backend/.env
    depends_on:
      - rabbitmq
      - db
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-file-processing-callback
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config

  # Celery Flower
  celery-flower:
    image: unstract/backend:${VERSION}
    container_name: unstract-celery-flower
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend flower --port=5555 --purge_offline_workers=5"
    env_file:
      - ../backend/.env
    depends_on:
      - worker
      - worker-logging
      - rabbitmq
    labels:
      - traefik.enable=false
    ports:
      - "5555:5555"
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-celery-flower
    volumes:
      - unstract_data:/data
    profiles:
      - optional

  # Celery Beat
  celery-beat:
    image: unstract/backend:${VERSION}
    container_name: unstract-celery-beat
    restart: unless-stopped
    entrypoint: .venv/bin/celery
    command: "-A backend beat --scheduler django_celery_beat.schedulers:DatabaseScheduler -l INFO"
    env_file:
      - ../backend/.env
      - ./essentials.env
    depends_on:
        - db
        - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-celery-beat

  # Frontend React app
  frontend:
    image: unstract/frontend:${VERSION}
    container_name: unstract-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
      - reverse-proxy
    environment:
      - ENVIRONMENT=development
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`frontend.unstract.localhost`)  && !PathPrefix(`/api/v1`, `/deployment`)

  platform-service:
    image: unstract/platform-service:${VERSION}
    container_name: unstract-platform-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ../platform-service/.env
    depends_on:
      - redis
      - db
    labels:
      - traefik.enable=false

  prompt-service:
    image: unstract/prompt-service:${VERSION}
    container_name: unstract-prompt-service
    restart: unless-stopped
    depends_on:
      - db
      - minio
      - minio-bootstrap
      - rabbitmq
    ports:
      - "3003:3003"
    env_file:
      - ../prompt-service/.env
    labels:
      - traefik.enable=false
    extra_hosts:
      # "host-gateway" is a special string that translates to host docker0 i/f IP.
      - "host.docker.internal:host-gateway"

  x2text-service:
    image: unstract/x2text-service:${VERSION}
    container_name: unstract-x2text-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    env_file:
      - ../x2text-service/.env
    depends_on:
      - db
    labels:
      - traefik.enable=false

  runner:
    image: unstract/runner:${VERSION}
    container_name: unstract-runner
    restart: unless-stopped
    ports:
      - 5002:5002
    env_file:
      - ../runner/.env
    volumes:
      - ./workflow_data:/data
      # Docker socket bind mount to spawn tool containers
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
      - rabbitmq
    labels:
      - traefik.enable=false

  # ====================================================================
  # V2 DEDICATED WORKER SERVICES (opt-in with --workers-v2 flag)
  # ====================================================================

  worker-api-deployment-v2:
    image: unstract/worker-unified:${VERSION}
    container_name: unstract-worker-api-deployment-v2
    restart: unless-stopped
    command: ["api-deployment"]
    ports:
      - "8085:8090"
    env_file:
      - ../workers/.env
      - ./essentials.env
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-api-deployment-v2
      - WORKER_TYPE=api_deployment
      - CELERY_QUEUES_API_DEPLOYMENT=${CELERY_QUEUES_API_DEPLOYMENT:-celery_api_deployments}
      - CELERY_POOL=${WORKER_API_DEPLOYMENT_POOL:-threads}
      - CELERY_PREFETCH_MULTIPLIER=${WORKER_API_DEPLOYMENT_PREFETCH_MULTIPLIER:-1}
      - CELERY_CONCURRENCY=${WORKER_API_DEPLOYMENT_CONCURRENCY:-4}
      - CELERY_EXTRA_ARGS=${WORKER_API_DEPLOYMENT_EXTRA_ARGS:-}
      - WORKER_NAME=api-deployment-worker-v2
      - API_DEPLOYMENT_METRICS_PORT=8090
      - HEALTH_PORT=8090
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config
    profiles:
      - workers-v2

  worker-callback-v2:
    image: unstract/worker-unified:${VERSION}
    container_name: unstract-worker-callback-v2
    restart: unless-stopped
    command: ["callback"]
    ports:
      - "8086:8083"
    env_file:
      - ../workers/.env
      - ./essentials.env
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-callback-v2
      - WORKER_TYPE=callback
      - WORKER_NAME=callback-worker-v2
      - CALLBACK_METRICS_PORT=8083
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config
    profiles:
      - workers-v2

  worker-file-processing-v2:
    image: unstract/worker-unified:${VERSION}
    container_name: unstract-worker-file-processing-v2
    restart: unless-stopped
    # command: ["file-processing"]
    command: [".venv/bin/celery", "-A", "worker", "worker", "--queues=file_processing,api_file_processing,file_processing_priority", "--loglevel=INFO", "--pool=prefork", "--concurrency=4", "--prefetch-multiplier=1", "--without-gossip", "--without-mingle", "--without-heartbeat"]
    ports:
      - "8087:8082"
    env_file:
      - ../workers/.env
      - ./essentials.env
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-file-processing-v2
      - WORKER_TYPE=file_processing
      - WORKER_MODE=oss
      - WORKER_NAME=file-processing-worker-v2
      - FILE_PROCESSING_METRICS_PORT=8082
      # OSS Configuration - Enterprise features disabled
      - MANUAL_REVIEW_ENABLED=false
      - ENTERPRISE_FEATURES_ENABLED=false
      - PLUGIN_REGISTRY_MODE=oss
      # Configurable Celery options
      - CELERY_QUEUES_FILE_PROCESSING=${CELERY_QUEUES_FILE_PROCESSING:-file_processing,api_file_processing}
      - CELERY_POOL=${WORKER_FILE_PROCESSING_POOL:-threads}
      - CELERY_PREFETCH_MULTIPLIER=${WORKER_FILE_PROCESSING_PREFETCH_MULTIPLIER:-1}
      - CELERY_CONCURRENCY=${WORKER_FILE_PROCESSING_CONCURRENCY:-4}
      - CELERY_EXTRA_ARGS=${WORKER_FILE_PROCESSING_EXTRA_ARGS:-}
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config
    profiles:
      - workers-v2

  worker-general-v2:
    image: unstract/worker-unified:${VERSION}
    container_name: unstract-worker-general-v2
    restart: unless-stopped
    command: ["general"]
    ports:
      - "8088:8082"
    env_file:
      - ../workers/.env
      - ./essentials.env
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-general-v2
      - WORKER_TYPE=general
      - WORKER_NAME=general-worker-v2
      - GENERAL_METRICS_PORT=8081
      - HEALTH_PORT=8082
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config
    profiles:
      - workers-v2

  worker-notification-v2:
    image: unstract/worker-unified:${VERSION}
    container_name: unstract-worker-notification-v2
    restart: unless-stopped
    command: ["notification"]
    ports:
      - "8089:8085"
    env_file:
      - ../workers/.env
      - ./essentials.env
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-notification-v2
      - WORKER_TYPE=notification
      - WORKER_NAME=notification-worker-v2
      - NOTIFICATION_METRICS_PORT=8085
      - HEALTH_PORT=8085
      # Notification specific configs
      - NOTIFICATION_QUEUE_NAME=notifications
      - WEBHOOK_QUEUE_NAME=notifications_webhook
      - EMAIL_QUEUE_NAME=notifications_email
      - SMS_QUEUE_NAME=notifications_sms
      - PRIORITY_QUEUE_NAME=notifications_priority
      # Configurable Celery options
      - CELERY_QUEUES_NOTIFICATION=${CELERY_QUEUES_NOTIFICATION:-notifications,notifications_webhook,notifications_email,notifications_sms,notifications_priority}
      - CELERY_POOL=${WORKER_NOTIFICATION_POOL:-prefork}
      - CELERY_PREFETCH_MULTIPLIER=${WORKER_NOTIFICATION_PREFETCH_MULTIPLIER:-1}
      - CELERY_CONCURRENCY=${WORKER_NOTIFICATION_CONCURRENCY:-4}
      - CELERY_EXTRA_ARGS=${WORKER_NOTIFICATION_EXTRA_ARGS:-}
      # Complete command override (if set, ignores all other options)
      - CELERY_COMMAND_OVERRIDE=${WORKER_NOTIFICATION_COMMAND_OVERRIDE:-}
      # Individual argument overrides
      - CELERY_APP_MODULE=${WORKER_NOTIFICATION_APP_MODULE:-worker}
      - CELERY_LOG_LEVEL=${WORKER_NOTIFICATION_LOG_LEVEL:-INFO}
      - CELERY_HOSTNAME=${WORKER_NOTIFICATION_HOSTNAME:-}
      - CELERY_MAX_TASKS_PER_CHILD=${WORKER_NOTIFICATION_MAX_TASKS_PER_CHILD:-}
      - CELERY_TIME_LIMIT=${WORKER_NOTIFICATION_TIME_LIMIT:-}
      - CELERY_SOFT_TIME_LIMIT=${WORKER_NOTIFICATION_SOFT_TIME_LIMIT:-}
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config
    profiles:
      - workers-v2

  worker-log-consumer-v2:
    image: unstract/worker-unified:${VERSION}
    container_name: unstract-worker-log-consumer-v2
    restart: unless-stopped
    command: ["log-consumer"]
    ports:
      - "8090:8084"
    env_file:
      - ../workers/.env
      - ./essentials.env
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-log-consumer-v2
      - WORKER_TYPE=log_consumer
      - WORKER_NAME=log-consumer-worker-v2
      - LOG_CONSUMER_METRICS_PORT=8084
      - HEALTH_PORT=8084
      # Log consumer specific configs
      - LOG_CONSUMER_QUEUE_NAME=celery_log_task_queue
      # Multiple queue support - supports comma-separated queue names
      - CELERY_QUEUES_LOG_CONSUMER=${CELERY_QUEUES_LOG_CONSUMER:-celery_log_task_queue,celery_periodic_logs}
      - PERIODIC_LOGS_QUEUE_NAME=${PERIODIC_LOGS_QUEUE_NAME:-celery_periodic_logs}
      # Log history configuration
      - LOG_HISTORY_QUEUE_NAME=${LOG_HISTORY_QUEUE_NAME:-log_history_queue}
      - LOGS_BATCH_LIMIT=${LOGS_BATCH_LIMIT:-100}
      - ENABLE_LOG_HISTORY=${ENABLE_LOG_HISTORY:-true}
      - CELERY_POOL=${WORKER_LOG_CONSUMER_POOL:-prefork}
      - CELERY_PREFETCH_MULTIPLIER=${WORKER_LOG_CONSUMER_PREFETCH_MULTIPLIER:-1}
      - CELERY_CONCURRENCY=${WORKER_LOG_CONSUMER_CONCURRENCY:-2}
      - CELERY_EXTRA_ARGS=${WORKER_LOG_CONSUMER_EXTRA_ARGS:-}
      # Complete command override (if set, ignores all other options)
      - CELERY_COMMAND_OVERRIDE=${WORKER_LOG_CONSUMER_COMMAND_OVERRIDE:-}
      # Individual argument overrides
      - CELERY_APP_MODULE=${WORKER_LOG_CONSUMER_APP_MODULE:-worker}
      - CELERY_LOG_LEVEL=${WORKER_LOG_CONSUMER_LOG_LEVEL:-INFO}
      - CELERY_HOSTNAME=${WORKER_LOG_CONSUMER_HOSTNAME:-}
      - CELERY_MAX_TASKS_PER_CHILD=${WORKER_LOG_CONSUMER_MAX_TASKS_PER_CHILD:-}
      - CELERY_TIME_LIMIT=${WORKER_LOG_CONSUMER_TIME_LIMIT:-}
      - CELERY_SOFT_TIME_LIMIT=${WORKER_LOG_CONSUMER_SOFT_TIME_LIMIT:-}
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config
    profiles:
      - workers-v2

  worker-log-history-scheduler-v2:
    image: unstract/worker-unified:${VERSION}
    container_name: unstract-worker-log-history-scheduler-v2
    restart: unless-stopped
    entrypoint: ["/bin/bash"]
    command: ["/app/log_consumer/scheduler.sh"]
    env_file:
      - ../workers/.env
      - ./essentials.env
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-log-history-scheduler-v2
      # Scheduler interval in seconds
      - LOG_HISTORY_CONSUMER_INTERVAL=${LOG_HISTORY_CONSUMER_INTERVAL:-5}
      # Override example: TASK_TRIGGER_COMMAND=/custom/trigger/script.sh
      - TASK_TRIGGER_COMMAND=${TASK_TRIGGER_COMMAND:-}
    labels:
      - traefik.enable=false
    profiles:
      - workers-v2

  worker-scheduler-v2:
    image: unstract/worker-unified:${VERSION}
    container_name: unstract-worker-scheduler-v2
    restart: unless-stopped
    command: ["scheduler"]
    ports:
      - "8091:8087"
    env_file:
      - ../workers/.env
      - ./essentials.env
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - ENVIRONMENT=development
      - APPLICATION_NAME=unstract-worker-scheduler-v2
      - WORKER_TYPE=scheduler
      - WORKER_NAME=scheduler-worker-v2
      - SCHEDULER_METRICS_PORT=8087
      - HEALTH_PORT=8087
      # Scheduler specific configs
      - SCHEDULER_QUEUE_NAME=scheduler
      # Configurable Celery options
      - CELERY_QUEUES_SCHEDULER=${CELERY_QUEUES_SCHEDULER:-scheduler}
      - CELERY_POOL=${WORKER_SCHEDULER_POOL:-prefork}
      - CELERY_PREFETCH_MULTIPLIER=${WORKER_SCHEDULER_PREFETCH_MULTIPLIER:-1}
      - CELERY_CONCURRENCY=${WORKER_SCHEDULER_CONCURRENCY:-2}
      - CELERY_EXTRA_ARGS=${WORKER_SCHEDULER_EXTRA_ARGS:-}
      # Complete command override (if set, ignores all other options)
      - CELERY_COMMAND_OVERRIDE=${WORKER_SCHEDULER_COMMAND_OVERRIDE:-}
      # Individual argument overrides
      - CELERY_APP_MODULE=${WORKER_SCHEDULER_APP_MODULE:-worker}
      - CELERY_LOG_LEVEL=${WORKER_SCHEDULER_LOG_LEVEL:-INFO}
      - CELERY_HOSTNAME=${WORKER_SCHEDULER_HOSTNAME:-}
      - CELERY_MAX_TASKS_PER_CHILD=${WORKER_SCHEDULER_MAX_TASKS_PER_CHILD:-}
      - CELERY_TIME_LIMIT=${WORKER_SCHEDULER_TIME_LIMIT:-}
      - CELERY_SOFT_TIME_LIMIT=${WORKER_SCHEDULER_SOFT_TIME_LIMIT:-}
    labels:
      - traefik.enable=false
    volumes:
      - ./workflow_data:/data
      - ${TOOL_REGISTRY_CONFIG_SRC_PATH}:/data/tool_registry_config
    profiles:
      - workers-v2

volumes:
  prompt_studio_data:
  unstract_data:

networks:
  default:
    # NOTE:
    # Any changes need to be reflected in proxy service too.
    name: unstract-network
