# Refer https://docs.docker.com/compose/how-tos/multiple-compose-files/merge/
# This is an example configuration which aims to minimize the number of celery workers
# It helps reduce memory usage during development
services:
  worker:
    command: "-A backend worker --loglevel=info -Q celery,celery_periodic_logs,celery_log_task_queue,celery_api_deployments --autoscale=${WORKER_AUTOSCALE}"
  worker-file-processing:
    command: "-A backend.workers.file_processing worker --loglevel=info -Q file_processing,api_file_processing --autoscale=${WORKER_FILE_PROCESSING_AUTOSCALE}"
  worker-file-processing-callback:
    command: "-A backend.workers.file_processing_callback worker --loglevel=info -Q file_processing_callback,api_file_processing_callback --autoscale=${WORKER_FILE_PROCESSING_CALLBACK_AUTOSCALE}"

  worker-logging:
    profiles:
      - high_memory
