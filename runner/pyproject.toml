[project]
name = "unstract-runner"
version = "0.1.0"
description = "Platform to interact with tools [Tool's Docker lifecycle management]"
authors = [{ name = "Zipstack Inc.", email = "devsupport@zipstack.com" }]
requires-python = ">=3.12,<3.13"
readme = "README.md"
license = { text = "MIT" }

dependencies = [
    "docker==6.1.3",
    "flask~=3.1.0",
    "python-dotenv>=1.0.0",
    "redis~=5.2.1",
    "unstract-core[flask]",
    "unstract-flags",
]

[dependency-groups]
dev = ["unstract-core[flask]", "poethepoet>=0.33.1", "debugpy>=1.8.14"]
test = [
    "pytest>=8.2.2",
    "pytest-mock>=3.14.0",
    "pytest-cov>=5.0.0",
    "pytest-md-report>=0.6.2",
]
deploy = [
    "gunicorn~=23.0",
    # OpenTelemetry for tracing and profiling
    "opentelemetry-distro",
    "opentelemetry-exporter-otlp",
]


[tool.uv.sources]
unstract-flags = { path = "../unstract/flags", editable = true }
unstract-core = { path = "../unstract/core", editable = true }

[tool.poe]
envfile = ".env"

[tool.poe.tasks.runner]
# Runs the service with gunicorn
cmd = "./entrypoint.sh"
help = "Runs the Unstract tool runner (Gunicorn)"

[tool.poe.tasks.runner-flask]
# Runs the service with flask
cmd = "flask run"
help = "Runs the Unstract tool runner (Flask)"

[tool.poe.tasks.test]
# Run tests for this service
cmd = "pytest -s -v"
env = { "ENV_FILE" = "tests/.env" }
help = "Runs pytests for the Unstract tool runner"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/unstract"]
